\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{pygame}
\PYG{k+kn}{from} \PYG{n+nn}{simulation} \PYG{k+kn}{import} \PYG{o}{*}
\PYG{k+kn}{import} \PYG{n+nn}{time}

\PYG{n}{params} \PYG{o}{=} \PYG{n}{Simulation}\PYG{o}{.}\PYG{n}{LoadParameters}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Default\PYGZdq{}}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Loads parameters}
\PYG{n}{Simulation}\PYG{o}{.}\PYG{n}{CheckParameters}\PYG{p}{(}\PYG{n}{params}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}Range\PYGZdq{}}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Checks parameters}

\PYG{n}{gameSim} \PYG{o}{=} \PYG{n}{Simulation}\PYG{p}{(}\PYG{n}{params}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Create and initiate simulation}
\PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{InitiateSimulation}\PYG{p}{()}

\PYG{c+c1}{\PYGZsh{} Creates pygame window \PYGZhy{} includes side debug offset if needed}
\PYG{n}{worldResolution} \PYG{o}{=} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}WorldSize\PYGZdq{}}\PYG{p}{]} \PYG{o}{*} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}TileWidth\PYGZdq{}}\PYG{p}{]} 
\PYG{k}{if} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}Debug\PYGZdq{}}\PYG{p}{]:}
    \PYG{n}{debugOffset} \PYG{o}{=} \PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}DeepQLearningLayers\PYGZdq{}}\PYG{p}{])} \PYG{o}{*} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}TileWidth\PYGZdq{}}\PYG{p}{]} \PYG{o}{*} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}DebugScale\PYGZdq{}}\PYG{p}{])}
\PYG{k}{else}\PYG{p}{:} 
    \PYG{n}{debugOffset} \PYG{o}{=} \PYG{l+m+mi}{0}
\PYG{n}{window} \PYG{o}{=} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{display}\PYG{o}{.}\PYG{n}{set\PYGZus{}mode}\PYG{p}{((}\PYG{n}{worldResolution} \PYG{o}{+} \PYG{n}{debugOffset}\PYG{p}{,} \PYG{n}{worldResolution}\PYG{p}{))}
\PYG{n}{pygame}\PYG{o}{.}\PYG{n}{display}\PYG{o}{.}\PYG{n}{set\PYGZus{}caption}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Comp Sci NEA\PYGZsq{}}\PYG{p}{)}

\PYG{n}{stepDelay} \PYG{o}{=} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}StepDelay\PYGZdq{}}\PYG{p}{]} \PYG{c+c1}{\PYGZsh{} Time step Delay}

\PYG{c+c1}{\PYGZsh{} Constant loop running}
\PYG{n}{running} \PYG{o}{=} \PYG{k+kc}{True}
\PYG{k}{while} \PYG{n}{running}\PYG{p}{:}
    \PYG{k}{for} \PYG{n}{event} \PYG{o+ow}{in} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{event}\PYG{o}{.}\PYG{n}{get}\PYG{p}{():}
        \PYG{k}{if} \PYG{n}{event}\PYG{o}{.}\PYG{n}{type} \PYG{o}{==} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{QUIT}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} If window exit than close end program}
            \PYG{n}{running} \PYG{o}{=} \PYG{k+kc}{False}

        \PYG{k}{if} \PYG{n}{event}\PYG{o}{.}\PYG{n}{type} \PYG{o}{==} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{KEYDOWN}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} Key Down}
            \PYG{k}{if} \PYG{n}{event}\PYG{o}{.}\PYG{n}{key} \PYG{o}{==} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{K\PYGZus{}F1}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} Force Create new world}
                \PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{CreateWorld}\PYG{p}{()}
            \PYG{k}{if} \PYG{n}{event}\PYG{o}{.}\PYG{n}{key} \PYG{o}{==} \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{K\PYGZus{}F2}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} Force Kill agent}
                \PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{agent}\PYG{o}{.}\PYG{n}{alive} \PYG{o}{=} \PYG{k+kc}{False}

    \PYG{k}{if} \PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{step} \PYG{o}{\PYGZgt{}} \PYG{n}{params}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}DQLearningMaxSteps\PYGZdq{}}\PYG{p}{]:}
        \PYG{n}{running} \PYG{o}{=} \PYG{k+kc}{False}

    \PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{TimeStep}\PYG{p}{()} \PYG{c+c1}{\PYGZsh{} Perform a timestep}
    \PYG{n}{time}\PYG{o}{.}\PYG{n}{sleep}\PYG{p}{(}\PYG{n}{stepDelay}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Sleep if needed}

    \PYG{n}{gameSim}\PYG{o}{.}\PYG{n}{RenderToCanvas}\PYG{p}{(}\PYG{n}{window}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Draw to canvas}

    \PYG{n}{pygame}\PYG{o}{.}\PYG{n}{display}\PYG{o}{.}\PYG{n}{update}\PYG{p}{()} \PYG{c+c1}{\PYGZsh{} Update pygame window to display content}
\end{Verbatim}
